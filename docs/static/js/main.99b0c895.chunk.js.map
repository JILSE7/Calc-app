{"version":3,"sources":["components/Button/index.js","App.js","components/Result.js","components/MathOperations.js","components/Funcions.js","components/Numbers.js","index.js"],"names":["Button","type","text","onclickHandler","className","onClick","App","useState","stack","setStack","number","console","log","onclickOperation","operation","onclickEqual","equal","eval","toString","value","onContetnClear","onDelete","length","newStack","substring","Result","defaultProps","MathOperations","map","operator","i","Funcions","Numbers","ReactDOM","render","document","getElementById"],"mappings":"0GAAA,wDAIaA,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,eAAd,OACd,wBAAQC,UAAWH,EAAMI,QAAS,kBAAKF,EAAeD,IAAtD,SACI,+BAAOA,Q,opCCKNI,IAAM,SAANA,MAET,cAA0BC,oDAAS,IAAnC,wNAAOC,MAAP,cAAcC,SAAd,cAOMN,eAAiB,SAACO,GACpBC,QAAQC,IAAI,kBAAmBF,GAC/BD,SAAS,GAAD,OAAID,OAAJ,OAAYE,KAGlBG,iBAAmB,SAACC,GACtBH,QAAQC,IAAI,aAAcE,GAC1BL,SAAS,GAAD,OAAID,OAAJ,OAAYM,KAGlBC,aAAe,SAAfA,aAAgBC,OAClBL,QAAQC,IAAI,SAAUI,OACtBP,SAASQ,KAAKT,OAAOU,aAGzB,OACI,oEAAMd,UAAU,mBAAhB,UACA,2DAAC,kDAAD,CAAQe,MAAOX,QAEf,2DAAC,mDAAD,CAASL,eAAgBA,iBAEzB,2DAAC,oDAAD,CAAUiB,eAAgB,kBAAMX,SAAS,KAAKY,SAAU,WACpD,GAAIb,MAAMc,OAAS,EAAG,CAClB,IAAMC,EAAWf,MAAMgB,UAAU,EAAGhB,MAAMc,OAAS,GACnDX,QAAQC,IAAI,WAAYW,GACxBd,SAASc,OAKjB,2DAAC,0DAAD,CAAgBR,aAAcA,aAAcF,iBAAkBA,wB,6BClDtE,kDAIaY,EAAS,SAAC,GAAD,IAAEN,EAAF,EAAEA,MAAF,OACd,yBAASf,UAAU,SAAnB,SACKe,KAWbM,EAAOC,aAAe,CAClBP,MAAO,M,6BClBX,yDAGaQ,EAAiB,SAAC,GAAsC,IAArCd,EAAoC,EAApCA,iBAAkBE,EAAkB,EAAlBA,aAI9C,OACI,yBAASX,UAAU,kBAAnB,SACI,qBAAKA,UAAU,iBAAf,SAJU,CAAC,IAAK,IAAK,IAAK,IAAK,KAMfwB,KAAI,SAACC,EAAUC,GAAX,OACV,cAAC,IAAD,CAAQ5B,KAAM2B,EAAU1B,eAA+B,MAAb0B,EAAoBd,EAAeF,GAAuBiB,EAAE,Y,6BCZ5H,yDAGaC,EAAW,SAAC,GAAD,IAAEX,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,SAAlB,OAChB,mCACI,0BAASjB,UAAU,YAAnB,UACI,cAAC,IAAD,CAAQH,KAAM,mBAAoBC,KAAK,QAAQC,eAAiBiB,IAChE,cAAC,IAAD,CAAQlB,KAAK,SAASC,eAAgBkB,W,6BCPtD,yDAGaW,EAAU,SAAC,GAAsB,IAArB7B,EAAoB,EAApBA,eAErB,OACI,yBAASC,UAAU,UAAnB,SAFY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAInBwB,KAAI,SAAAlB,GAAM,OACd,cAAC,IAAD,CAAQR,KAAMQ,EAAQP,eAAkBA,GAAqBO,U,8BCT7E,8CAKAuB,IAASC,OAEL,cAAC,IAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.99b0c895.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Button.css'\r\n\r\nexport const Button = ({type ,text, onclickHandler}) => (\r\n        <button className={type} onClick={()=> onclickHandler(text)}>\r\n            <span>{text}</span>\r\n        </button>\r\n    )\r\n\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    onclickHandler: PropTypes.func.isRequired\r\n\r\n}\r\n","/*eslint no-eval: 0 */\r\nimport React, { useState } from 'react';\r\nimport { Result } from './components/Result';\r\n\r\n//Css\r\nimport './App.css' \r\nimport { MathOperations } from './components/MathOperations';\r\nimport { Funcions } from './components/Funcions';\r\nimport { Numbers } from './components/Numbers';\r\n\r\n\r\nexport const App = () => {\r\n    //UseState\r\n    const [stack, setStack] = useState(\"\");\r\n    //Loadashword\r\n    // const word = words(stack, /[^-^+^*^/]+/g);\r\n    \r\n\r\n\r\n    //Funciones\r\n    const onclickHandler = (number) =>{\r\n        console.log(\"Click en number\", number)\r\n        setStack(`${stack}${number}`)\r\n    }\r\n\r\n    const onclickOperation = (operation)=>{\r\n        console.log(\"Operation:\", operation)\r\n        setStack(`${stack}${operation}`)\r\n    }\r\n    \r\n    const onclickEqual = (equal)=>{\r\n        console.log(\"Equal:\", equal)\r\n        setStack(eval(stack).toString())\r\n    }\r\n\r\n    return (\r\n        <main className='react-calculator'>\r\n        <Result value={stack} />\r\n        \r\n        <Numbers onclickHandler={onclickHandler}/>\r\n    \r\n        <Funcions onContetnClear={() => setStack(\"\")} onDelete={()=> {\r\n            if (stack.length > 0) {\r\n                const newStack = stack.substring(0, stack.length - 1)\r\n                console.log(\"onDelete\", newStack)\r\n                setStack(newStack)\r\n            }\r\n            \r\n        }}/>\r\n\r\n        <MathOperations onclickEqual={onclickEqual} onclickOperation={onclickOperation}/>\r\n        \r\n    </main>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Result = ({value}) => (\r\n        <section className=\"result\">\r\n            {value}\r\n        </section>\r\n    )\r\n\r\n\r\n//Validacion de las properties\r\nResult.propTypes = {\r\n    value: PropTypes.string.isRequired\r\n}\r\n\r\n//Estableciendo valores por defecto\r\nResult.defaultProps = {\r\n    value: \"0\"\r\n}\r\n","import React from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport { Button } from './Button'\r\nexport const MathOperations = ({onclickOperation, onclickEqual}) => {\r\n\r\n    const operators = [\"+\", \"-\", \"*\", \"/\", \"=\"];\r\n\r\n    return (\r\n        <section className=\"math-operations\">\r\n            <div className=\"math-operation\">\r\n              {\r\n                  operators.map((operator, i) => (\r\n                      <Button text={operator} onclickHandler ={(operator === \"=\") ? onclickEqual : onclickOperation} key={i+1}/>\r\n                  ))\r\n              }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nMathOperations.propTypes = {\r\n    onclickOperation: Proptypes.func.isRequired, \r\n    onclickEqual: Proptypes.func.isRequired \r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from './Button'\r\nexport const Funcions = ({onContetnClear, onDelete}) => (\r\n        <>\r\n            <section className=\"functions\">\r\n                <Button type={'button-long-text'} text=\"Clear\" onclickHandler= {onContetnClear}/>\r\n                <Button text=\"&larr;\" onclickHandler={onDelete}/>\r\n            </section>\r\n        </>\r\n)\r\n\r\nFuncions.propTypes = {\r\n    onContetnClear: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button } from './Button'\r\n\r\nexport const Numbers = ({onclickHandler}) => {\r\n    const numbers = [7,8,9,4,5,6,1,2,3,0]\r\n    return (\r\n        <section className=\"numbers\">\r\n        {\r\n            numbers.map(number => (\r\n                <Button text={number} onclickHandler = {onclickHandler} key={number}/>\r\n            ))\r\n        }\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}